{"version":3,"sources":["axios-orders.js","components/Order/Order.js","hoc/AUXiliary/Auxilary.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandeller/withErrorHandelle.js","store/actions/actionsTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","components/UI/Spinner/Spinner.js","containers/Orders/Orders.js","assets/Images/burgerLogo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/UI/Button/Button.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","reportWebVitals.js","store/utility.js","store/reducer/burgerBuilder.js","store/reducer/order.js","index.js"],"names":["instance","axios","create","baseURL","order","props","ingredients","ingredientsname","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","className","Number","parseFloat","price","toFixed","Auxilary","children","backdrop","show","onClick","clicked","Modal","nextProps","nextState","this","modalClose","transform","opacity","Component","withErrorHandeller","WrappedComponent","state","error","errorConfirmedHandeller","setState","reqInterceptors","interceptors","response","use","req","resInterceptors","request","eject","message","ADD_INGREDIENTS","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASED_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILED","PURCHASE_INIT","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAAIL","initIngredients","dispatch","get","then","data","type","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchasedBurgerSuccess","purchaseBurgerFailed","fetchOrders","res","fetchedOrderData","key","orders","err","spinner","Orders","onFetchOrders","loading","ingredienst","connect","action","logo","src","burgerLogo","alt","navigationItem","to","links","exact","activeClassName","navigationItems","drawerToggle","open","toolbar","showSide","sideDrawer","attachClasses","close","join","Layout","showSideDrawer","sideDrawerHandeller","showSideDrawerMenu","BurgerIngredients","withRouter","console","log","transformedIngrediendts","Object","keys","igKey","reduce","arr","el","concat","length","Button","prevProps","prevState","checkoutSummary","width","btnType","checkoutSummaryCancel","checkoutSummaryContinue","input","inputElement","inputClassesForm","isValid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","labl","ContactData","orderForm","placeholder","validation","required","valid","street","locality","State","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","checkValididity","rules","trim","orderHandeller","event","formData","formKey","ings","onOrderBurger","inputChangedHandeller","inputIdentifier","updatedOrderForm","updatedFormOrderForm","target","formElementsArrays","config","form","onSubmit","element","disabled","burgerBuilder","totalPrice","actions","withErrorHandelle","Checkout","checkoutCancel","history","goBack","checkoutContinue","replace","summary","purchase","purchased","path","match","component","buildControl","label","removed","added","controls","buildControls","ctrl","ingredientAdded","ingredientsRemoved","purchasable","purchasing","orderSummary","ingredientSummary","purchaseCancelEvent","purchaseContinueEvent","BurgerBuilder","purchaseHandeller","purchaseCancelHandeller","purchaseContinueHandeller","onInitPurchase","onInitIngredients","sum","disabledInfo","orderSummaryData","burger","updatePurchasable","onIngredientAddedProperty","onIngredientRemoveProperty","OrderSummary","ingname","ingredientsName","burgerBuilderActionTypes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updatedObject","oldObject","updatedProperties","initialState","INGREDIENTS_PRICES","salad","bacon","cheese","meat","addIngredients","updatedIngredients","updatdState","removeIngredients","updatedIngre","updatdSt","setIngredients","object","fetchIngredientsFailed","reducer","actionsTypes","newOrder","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"4aAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,2F,uBC6CEC,EA5CD,SAACC,GAEX,IAAMC,EAAc,GAKpB,IAAI,IAAIC,KAAmBF,EAAMC,YAG7BA,EAAYE,KAAK,CAAEC,KAAMF,EAAiBG,OAAOL,EAAMC,YAAYC,KAIvE,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GAErC,OAAO,uBAEKC,MAAO,CACHC,cAAc,aACdC,QAAQ,eACRC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAPlB,UASON,EAAGJ,KATV,IASiBI,EAAGH,SARVG,EAAGJ,SAWxB,OACI,sBAAKW,UAAU,QAAf,UACI,+CAAkBT,KAClB,wCAAU,wCAAWU,OAAOC,WAAWjB,EAAMkB,OAAOC,QAAQ,a,OCjCzDC,G,MAFE,SAACpB,GAAD,OAAWA,EAAMqB,WCUnBC,G,MAPE,SAACtB,GACd,OACIA,EAAMuB,KAAO,qBAAKR,UAAU,WAAWS,QAASxB,EAAMyB,UAAkB,OCuBjEC,E,2KArBX,SAAuBC,EAAUC,GAC7B,OAAOD,EAAUJ,OAASM,KAAK7B,MAAMuB,MAAQI,EAAUN,WAAaQ,KAAK7B,MAAMqB,W,oBAGnF,WACI,OACA,eAAC,EAAD,WACI,cAAC,EAAD,CAAUE,KAAQM,KAAK7B,MAAMuB,KAAME,QAASI,KAAK7B,MAAM8B,aACvD,qBAAKf,UAAU,QACXN,MAAO,CACHsB,UAAUF,KAAK7B,MAAMuB,KAAO,gBAAkB,qBAC9CS,QAAUH,KAAK7B,MAAMuB,KAAO,IAAM,KAH1C,SAMKM,KAAK7B,MAAMqB,kB,GAhBRY,aCwCLC,EAzCY,SAACC,EAAiBvC,GACzC,mNAEIwC,MAAQ,CACJC,MAAM,MAHd,EAsBIC,wBAA0B,WACtB,EAAKC,SAAS,CAACF,MAAM,QAvB7B,wDAMI,WAAsB,IAAD,OAGjBR,KAAKW,gBAAkB5C,EAAM6C,aAAaC,SAASC,KAAI,SAAAC,GAEnD,OADA,EAAKL,SAAS,CAACF,MAAM,OACdO,KAEXf,KAAKgB,gBAAkBjD,EAAM6C,aAAaC,SAASC,KAAI,SAAAD,GAAQ,OAAIA,KAAS,SAAAL,GACxE,EAAKE,SAAS,CAACF,MAAMA,SAdjC,kCAiBI,WACIzC,EAAM6C,aAAaK,QAAQC,MAAMlB,KAAKW,iBACtC5C,EAAM6C,aAAaC,SAASK,MAAMlB,KAAKgB,mBAnB/C,oBA0BI,WACI,OACI,eAAC,EAAD,WACA,cAAC,EAAD,CAAOtB,KAAMM,KAAKO,MAAMC,MACpBP,WAAcD,KAAKS,wBADvB,SAEKT,KAAKO,MAAMC,MAAQR,KAAKO,MAAMC,MAAMW,QAAU,OAEnD,cAACb,EAAD,eAAuBN,KAAK7B,eAjCxC,GAAqBiC,cCLZgB,EAAkB,kBAClBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAA2B,2BAE3BC,EAAyB,yBACzBC,EAA0B,0BAC1BC,EAAyB,yBACzBC,EAAgB,gBAEhBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAoB,oBCkBpBC,EAAkB,WAC3B,OAAO,SAAAC,GACHjE,EAAMkE,IAAI,qBACTC,MAAK,SAAArB,GAhBiB,IAACzC,EAoBpB4D,GApBoB5D,EAoBIyC,EAASsB,KAnBlC,CACHC,KAAKC,EACLjE,YAAYA,QAmBXkE,OAAM,SAAA9B,GACHwB,EAfD,CACHI,KAAKC,SCFAE,EAAiB,SAACC,GAC3B,OAAO,SAAAR,GACHA,EAPG,CACHI,KAAKC,IAOLtE,EAAM0E,KAAK,eAAiBD,GACvBN,MAAK,SAAArB,GACFmB,EA1BsB,SAACU,EAAGF,GACtC,MAAO,CACHJ,KAAKC,EACLM,QAAQD,EACRF,UAAUA,GAsBOI,CAAuB/B,EAASsB,KAAMK,OAEtDF,OAAM,SAAA9B,GACHwB,EArBwB,SAACxB,GACjC,MAAO,CACH4B,KAAKC,EACL7B,MAAMA,GAkBOqC,CAAqBrC,SAiC7BsC,EAAa,WACtB,OAAO,SAAAd,GAEHjE,EAAMkE,IAAI,gBACTC,MAAK,SAAAa,GACF,IAAMC,EAAmB,GACzB,IAAI,IAAIC,KAAOF,EAAIZ,KACfa,EAAiB1E,KAAjB,2BAA0ByE,EAAIZ,KAAKc,IAAnC,IAAwCP,GAAIO,KAIhDjB,EA/BD,CACHI,KAAKC,EACLa,OA6BgCF,OAE/BV,OAAM,SAAAa,GACHnB,EA3BD,CACHI,KAAKC,EACL7B,MAyB6B2C,SCtEtBC,G,MANC,WACZ,OACI,qBAAKlE,UAAU,SAAf,0BCIFmE,E,uKAEF,WACIrD,KAAK7B,MAAMmF,kB,oBAGf,WACI,IAAIJ,EAAS,cAAC,EAAD,IAeb,OAVIlD,KAAK7B,MAAMoF,UACXL,EAASlD,KAAK7B,MAAM+E,OAAOxE,KAAI,SAAAR,GAAK,OAE3B,aADD,CACE,EAAD,CAEGE,YAAaF,EAAMsF,YACnBnE,MAAOnB,EAAMmB,OAFNnB,EAAMwE,QAOzB,8BACKQ,Q,GAxBI9C,aA2CNqD,eAbQ,SAAAlD,GACnB,MAAO,CACH2C,OAAO3C,EAAMrC,MAAMgF,OACnBK,QAAQhD,EAAMrC,MAAMqF,YAID,SAAAvB,GACvB,MAAO,CACHsB,cAAe,kBAAMtB,EAAS0B,SAIvBD,CAA2CpD,EAAmBgD,EAAOtF,ICpDrE,G,kBAAA,IAA0B,wCCY1B4F,EARF,SAACxF,GACV,OACI,qBAAKe,UAAU,OAAf,SACI,qBAAK0E,IAAOC,EAAYC,IAAI,sB,uBCOzBC,EAVQ,SAAC5F,GACpB,OACA,oBAAIe,UAAU,iBAAd,SACI,cAAC,IAAD,CACI8E,GAAI7F,EAAM8F,MACVC,MAAO/F,EAAM+F,MACbC,gBAAgB,SAHpB,SAG+BhG,EAAMqB,cCK9B4E,EAXS,WACpB,OACI,8BACI,qBAAIlF,UAAU,kBAAd,UACI,cAAC,EAAD,CAAgB+E,MAAM,IAAIC,OAAK,EAA/B,4BACA,cAAC,EAAD,CAAgBD,MAAM,UAAtB,0BCIDI,G,OAVM,SAAClG,GAClB,OACI,sBAAKe,UAAU,eAAeS,QAASxB,EAAMmG,KAA7C,UACI,wBACA,wBACA,6BCYGC,EAdC,SAACpG,GACb,OACI,yBAAQe,UAAU,UAAlB,UACI,cAAC,EAAD,CAAcoF,KAAMnG,EAAMqG,WAC1B,qBAAKtF,UAAU,OAAf,SACI,cAAC,EAAD,MAEJ,qBAAMA,UAAU,cAAhB,SACI,cAAC,EAAD,UCcDuF,G,OArBI,SAACtG,GAEhB,IAAIuG,EAAgB,CAAC,aAAa,SAIlC,OAHGvG,EAAMmG,OACLI,EAAgB,CAAC,aAAa,SAG9B,eAAC,EAAD,WACI,cAAC,EAAD,CAAUhF,KAAMvB,EAAMmG,KAAM1E,QAASzB,EAAMwG,QAC3C,sBAAKzF,UAAWwF,EAAcE,KAAK,KAAnC,UACI,qBAAK1F,UAAU,OAAf,SACI,cAAC,EAAD,MAEJ,8BACI,cAAC,EAAD,cCYL2F,E,4MAzBXtE,MAAQ,CACJuE,gBAAiB,G,EAGrBC,oBAAsB,WAClB,EAAKrE,SAAS,CAACoE,gBAAiB,K,EAGpCE,mBAAqB,WACjB,EAAKtE,SAAS,CAACoE,gBAAiB,K,4CAGpC,WACI,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAASN,SAAYxE,KAAKgF,qBAC1B,cAAC,EAAD,CAAYV,KAAMtE,KAAKO,MAAMuE,eAAgBH,MAAO3E,KAAK+E,sBACzD,sBAAM7F,UAAU,UAAhB,SACKc,KAAK7B,MAAMqB,kB,GApBXY,aCuCN6E,G,0KAvCX,WAEI,IAAI7G,EAAc,GAClB,OAAO4B,KAAK7B,MAAMiE,MACd,IAAM,eACFhE,EAAc,qBAAKc,UAAU,gBAC7B,MACJ,IAAM,YACFd,EAAe,sBAAKc,UAAU,WAAf,UACP,qBAAKA,UAAU,WACf,qBAAKA,UAAU,cAEvB,MACJ,IAAM,OACFd,EAAc,qBAAKc,UAAU,SAC7B,MACJ,IAAM,SACFd,EAAc,qBAAKc,UAAU,WAC7B,MACJ,IAAM,QACFd,EAAc,qBAAKc,UAAU,UAC7B,MACJ,IAAM,QACFd,EAAc,qBAAKc,UAAU,UAC7B,MACJ,QACId,EAAc,KAEtB,OAAOA,M,GA9BiBgC,cC0CjB8E,eAxCA,SAAC/G,GACZgH,QAAQC,IAAI,KACZD,QAAQC,IAAIjH,EAAMC,aAClB+G,QAAQC,IAAI,KAEZ,IAAIC,EAA0BC,OAAOC,KAAKpH,EAAMC,aAAaM,KACzD,SAAC8G,GAMO,OAAO,cAAC,EAAD,CAAiCpD,KAAMoD,GAAbA,MAG3CC,QAAO,SAACC,EAAKC,GACX,OAAOD,EAAIE,OAAOD,KACnB,IAKH,OAJsC,IAAnCN,EAAwBQ,SACvBR,EAA0B,kEAE9BF,QAAQC,IAAIC,GAER,sBAAKnG,UAAU,SAAf,UACI,cAAC,EAAD,CAAmBkD,KAAM,cACxBiD,EACD,cAAC,EAAD,CAAmBjD,KAAM,uBCgCtB0D,E,kDA9CT,WAAY3H,GAAQ,uCACRA,G,sDAIZ,c,+BAIA,c,uCAIA,SAA0B2B,M,mCAI1B,SAAsBA,EAAWC,M,iCAIjC,SAAoBD,EAAWC,M,gCAI/B,SAAmBgG,EAAWC,M,kCAI9B,c,oBAIA,WACM,OACM,4B,GApCG5F,aCGN6F,G,OAfS,SAAC9H,GAGrB,OACI,sBAAKe,UAAU,kBAAf,UACI,yDACA,qBAAKN,MAAO,CAACsH,MAAM,OAAOnH,OAAO,QAAjC,SACI,cAAC,EAAD,CAAQX,YAAeD,EAAMC,gBAEjC,cAAC,EAAD,CAAQ+H,QAAQ,SAASvG,QAASzB,EAAMiI,sBAAxC,oBACA,cAAC,EAAD,CAAQD,QAAQ,UAAUvG,QAASzB,EAAMkI,wBAAzC,2BCuBGC,G,cAnCD,SAACnI,GAEX,IAAIoI,EAAe,KACbC,EAAmB,CAAC,gBAM1B,OAJGrI,EAAMsI,SAAWtI,EAAMuI,gBAAkBvI,EAAMwI,SAC9CH,EAAiBlI,KAAK,WAGnBH,EAAMyI,aACT,IAAM,QACFL,EAAe,+CAAOrH,UAAWsH,EAAiB5B,KAAK,MAAUzG,EAAM0I,eAAxD,IAAuEC,MAAO3I,EAAM2I,MAAOC,SAAU5I,EAAM6I,WAC1H,MACJ,IAAM,WACFT,EAAe,kDAAUrH,UAAWsH,EAAiB5B,KAAK,MAAUzG,EAAM0I,eAA3D,IAA0EC,MAAO3I,EAAM2I,MAAOC,SAAU5I,EAAM6I,WAC7H,MACJ,IAAM,SACET,EAAgB,gDAAQrH,UAAWsH,EAAiB5B,KAAK,MAAUzG,EAAM0I,eAAzD,IAAwEC,MAAO3I,EAAM2I,MAAOC,SAAU5I,EAAM6I,QAA5G,SACR7I,EAAM0I,cAAcI,QAAQvI,KAAI,SAAAwI,GAC7B,OAAO,wBAA4BJ,MAAOI,EAAOJ,MAA1C,SAAkDI,EAAOC,cAA3CD,EAAOJ,aAGvC,MACR,QACIP,EAAe,+CAAOrH,UAAWsH,EAAiB5B,KAAK,MAAUzG,EAAM0I,eAAxD,IAAuEC,MAAO3I,EAAM2I,MAAOC,SAAU5I,EAAM6I,WAGlI,OACI,sBAAK9H,UAAU,QAAf,UACI,uBAAOA,UAAU,QAAjB,SAA0Bf,EAAMiJ,OAC/Bb,OCtBPc,G,mNAEF9G,MAAQ,CACJ+G,UAAW,CACH/I,KAAM,CACFqI,YAAc,QACdC,cAAgB,CACZzE,KAAO,OACPmF,YAAc,aAElBT,MAAM,GACNU,WAAY,CACRC,UAAS,GAEbC,OAAM,EACNf,SAAQ,GAEZgB,OAAO,CACHf,YAAc,QACdC,cAAgB,CACZzE,KAAO,OACPmF,YAAc,eAElBT,MAAM,GACNU,WAAY,CACRC,UAAS,GAEbC,OAAM,EACNf,SAAQ,GAEZiB,SAAS,CACLhB,YAAc,QACdC,cAAgB,CACZzE,KAAO,OACPmF,YAAc,iBAElBT,MAAM,GACNU,WAAY,CACRC,UAAS,GAEbC,OAAM,EACNf,SAAQ,GAEZkB,MAAO,CACHjB,YAAc,QACdC,cAAgB,CACZzE,KAAO,OACPmF,YAAc,cAElBT,MAAM,GACNU,WAAY,CACRC,UAAS,GAEbC,OAAM,EACNf,SAAQ,GAEZmB,QAAS,CACLlB,YAAc,QACdC,cAAgB,CACZzE,KAAO,OACPmF,YAAc,iBAElBT,MAAM,GACNU,WAAY,CACRC,UAAS,EACTM,UAAU,EACVC,UAAU,GAEdN,OAAM,EACNf,SAAQ,GAEZsB,QAAS,CACLrB,YAAc,QACdC,cAAgB,CACZzE,KAAO,OACPmF,YAAc,gBAElBT,MAAM,GACNU,WAAY,CACRC,UAAS,GAEbC,OAAM,EACNf,SAAQ,GAEZuB,MAAM,CACFtB,YAAc,QACdC,cAAgB,CACZzE,KAAO,OACPmF,YAAc,eAElBT,MAAM,GACNU,WAAY,CACRC,UAAS,GAEbC,OAAM,EACNf,SAAQ,GAEZwB,eAAgB,CACZvB,YAAc,SACdC,cAAgB,CACZI,QAAU,CACN,CAACH,MAAM,SAAWK,aAAa,UAC/B,CAACL,MAAM,SAAWK,aAAa,YAGvCL,MAAM,GACNU,WAAY,CACRC,UAAS,GAEbC,OAAM,IAGlBU,aAAY,G,EAGhBC,gBAAkB,SAACvB,EAAMwB,GAErB,IAAI7B,GAAU,EAed,OAZG6B,EAAMb,WACLhB,EAA2B,KAAjBK,EAAMyB,QAGjBD,EAAMP,YACLtB,EAAUK,EAAMjB,QAAUyC,EAAMP,WAAatB,GAG9C6B,EAAMN,YACLvB,EAAUK,EAAMjB,QAAUyC,EAAMN,WAAavB,GAG1CA,G,EAGX+B,eAAiB,SAACC,GACd,EAAK/H,SAAS,CAAC6C,SAAQ,IACvB,IAAMmF,EAAW,GACjB,IAAK,IAAIC,KAAW,EAAKpI,MAAM+G,UAC3BoB,EAASC,GAAW,EAAKpI,MAAM+G,UAAUqB,GAAS7B,MAEtD,IAAM5D,EAAS,CACXM,YAAY,EAAKrF,MAAMyK,KACvBvJ,MAAM,EAAKlB,MAAMkB,MACjBnB,MAAMwK,GAEV,EAAKvK,MAAM0K,cAAc3F,I,EAG7B4F,sBAAwB,SAACL,EAAOM,GAC5B,IAAMC,EAAgB,eACf,EAAKzI,MAAM+G,WAEZ2B,EAAoB,eACnBD,EAAiBD,IAExBE,EAAqBnC,MAAQ2B,EAAMS,OAAOpC,MAC1CmC,EAAqBtC,SAAU,EAI/BsC,EAAqBvB,MAAQ,EAAKW,gBAAgBY,EAAqBnC,MAAMmC,EAAqBzB,YAClGwB,EAAiBD,GAAmBE,EAEpC,IAAIb,GAAc,EAClB,IAAI,IAAIW,KAAmBC,EACvBZ,EAAcY,EAAiBD,GAAiBrB,OAASU,EAE7D,EAAK1H,SAAS,CAAC4G,UAAU0B,EAAiBZ,YAAYA,K,4CAI1D,WAAU,IAAD,OAGCe,EAAqB,GAC3B,IAAI,IAAIlG,KAAOjD,KAAKO,MAAM+G,UACtB6B,EAAmB7K,KAAK,CACpBoE,GAAGO,EACHmG,OAAOpJ,KAAKO,MAAM+G,UAAUrE,KAQpC,IAAIoG,EACI,uBAAMC,SAAUtJ,KAAKwI,eAArB,UAGKW,EAAmBzK,KAAI,SAAA6K,GAAO,OAC3B,cAAC,EAAD,CAEA3C,YAAa2C,EAAQH,OAAOxC,YAC5BC,cAAe0C,EAAQH,OAAOvC,cAC9BC,MAAOyC,EAAQH,OAAOtC,MACtBL,SAAU8C,EAAQH,OAAO1B,MACzBf,QAAS4C,EAAQH,OAAOzC,QACxBD,eAAkB6C,EAAQH,OAAO5B,WACjCR,QAAS,SAACyB,GAAD,OAAW,EAAKK,sBAAsBL,EAAMc,EAAQ7G,MAPxD6G,EAAQ7G,OAUjB,cAAC,EAAD,CAAQyD,QAAQ,UAAUqD,UAAWxJ,KAAKO,MAAM6H,YAAazI,QAAS,kBAAM,EAAK0I,mBAAjF,sBAMZ,OAHGrI,KAAK7B,MAAMoF,UACV8F,EAAO,cAAC,EAAD,KAGP,sBAAKnK,UAAU,cAAf,UACI,0DACCmK,S,GApNSjJ,cAwOXqD,eAdQ,SAAAlD,GACnB,MAAO,CACHqI,KAAKrI,EAAMkJ,cAAcrL,YACzBiB,MAAMkB,EAAMkJ,cAAcC,WAC1BnG,QAAQhD,EAAMrC,MAAMqF,YAIF,SAAAvB,GACtB,MAAO,CACH6G,cAAc,SAACrG,GAAD,OAAeR,EAAS2H,EAAuBnH,QAItDiB,CAA0CmG,EAAkBvC,EAAYtJ,IC3OjF8L,G,4MAGEC,eAAiB,WACb,EAAK3L,MAAM4L,QAAQC,U,EAIvBC,iBAAmB,WAGf,EAAK9L,MAAM4L,QAAQG,QAAQ,2B,4CAGnC,WACI,IAAIC,EAAU,cAAC,IAAD,CAAUnG,GAAI,MAI5B,GAAKhE,KAAK7B,MAAMiM,SAAW,CACEpK,KAAK7B,MAAMkM,WAAY,IAEhDF,EACI,gCACA,cAAC,EAAD,CACA/L,YAAa4B,KAAK7B,MAAMyK,KACxBxC,sBAAwBpG,KAAK8J,eAC7BzD,wBAAyBrG,KAAKiK,mBAC9B,cAAC,IAAD,CACIK,KAAMtK,KAAK7B,MAAMoM,MAAMD,KAAO,gBAC9BE,UAAWnD,OAKvB,OACI,8BACK8C,Q,GArCM/J,aAqDRqD,gBATS,SAAAlD,GAEpB,MAAO,CACHqI,KAAKrI,EAAMkJ,cAAcrL,YACzBgM,SAAS7J,EAAMrC,MAAMmM,aAKd5G,CAAyBoG,ICjDzBY,I,cATM,SAACtM,GAAD,OACb,sBAAKe,UAAU,eAAf,UACI,qBAAKA,UAAU,QAAf,SAAwBf,EAAMuM,QAC9B,wBAAQxL,UAAU,OAAOS,QAAWxB,EAAMwM,QAASnB,SAAUrL,EAAMqL,SAAnE,kBACA,wBAAQtK,UAAU,OAAOS,QAAWxB,EAAMyM,MAA1C,uBCHNC,GAAW,CACb,CAACH,MAAQ,QAAStI,KAAO,SACzB,CAACsI,MAAQ,QAAStI,KAAO,SACzB,CAACsI,MAAQ,SAAUtI,KAAO,UAC1B,CAACsI,MAAQ,OAAQtI,KAAO,SAoBZ0I,GAjBM,SAAC3M,GAAD,OACd,sBAAKe,UAAY,gBAAjB,UACI,iDAAmB,wCAAWf,EAAMkB,MAAMC,QAAQ,GAA/B,UAClBuL,GAASnM,KAAI,SAAAqM,GAAI,OACd,cAAC,GAAD,CACIvB,SAAUrL,EAAMqL,SAASuB,EAAK3I,MAC9BwI,MAAS,kBAAMzM,EAAM6M,gBAAgBD,EAAK3I,OAC1CuI,QAAW,kBAAMxM,EAAM8M,mBAAmBF,EAAK3I,OAE/CsI,MAASK,EAAKL,OADPK,EAAKL,UAIpB,wBAAQxL,UAAU,cAAcsK,UAAWrL,EAAM+M,YAAavL,QAASxB,EAAMgN,WAA7E,2BCCGC,GApBM,SAACjN,GAClB,IAAMkN,EAAoB/F,OAAOC,KAAKpH,EAAMC,aAC3CM,KAAI,SAAC8G,GACF,OAAQ,+BAAgB,+BAAOA,IAAvB,MAAwCrH,EAAMC,YAAYoH,KAAjDA,MAErB,OACI,eAAC,EAAD,WACI,4CACA,+EACA,6BACK6F,IAEL,gDAAkB,wCAAWlN,EAAMkB,MAAMC,QAAQ,SACjD,uDACA,cAAC,EAAD,CAAQ6G,QAAQ,SAASvG,QAAUzB,EAAMmN,oBAAzC,oBACA,cAAC,EAAD,CAAQnF,QAAQ,UAAUvG,QAASzB,EAAMoN,sBAAzC,0BCENC,G,4MAQFjL,MAAQ,CAEJmJ,WAAY,EACZwB,aAAc,EACdC,YAAW,G,EA+BfM,kBAAoB,WAChB,EAAK/K,SAAS,CAACyK,YAAW,K,EAG9BO,wBAA0B,WACtB,EAAKhL,SAAS,CAACyK,YAAW,K,EAG9BQ,0BAA4B,WAExB,EAAKxN,MAAMyN,iBACX,EAAKzN,MAAM4L,QAAQzL,KAAK,c,uDArC5B,WACI0B,KAAK7B,MAAM0N,sB,+BAUf,SAAkBzN,GAWd,OAPYkH,OAAOC,KAAKnH,GACvBM,KAAK,SAAA8G,GACF,OAAOpH,EAAYoH,MAEtBC,QAAO,SAACqG,EAAKnG,GACV,OAAOmG,EAAMnG,IACd,GACW,I,oBAkBlB,WAEI,IAAMoG,EAAY,eACX/L,KAAK7B,MAAMyK,MAElB,IAAI,IAAI3F,KAAO8I,EACXA,EAAa9I,GAAO8I,EAAa9I,IAAQ,EAE7C,IAAI+I,EAAkB,KAEnBhM,KAAKO,MAAMgD,UACVyI,EAAmB,cAAC,EAAD,KAQvB,IAAIC,EAASjM,KAAK7B,MAAMqC,MAAQ,6DAAsC,cAAC,EAAD,IA0BtE,OAzBGR,KAAK7B,MAAMyK,OACdqD,EACQ,eAAC,EAAD,WACI,cAAC,EAAD,CAAQ7N,YAAe4B,KAAK7B,MAAMyK,OAClC,cAAC,GAAD,CACIsC,YAAelL,KAAKkM,kBAAkBlM,KAAK7B,MAAMyK,MACjDoC,gBAAmBhL,KAAK7B,MAAMgO,0BAC9BlB,mBAAsBjL,KAAK7B,MAAMiO,2BACjC5C,SAAYuC,EACZ1M,MAASW,KAAK7B,MAAMkB,MACpB8L,WAAYnL,KAAKyL,uBAKzBO,EAAoB,cAACK,GAAD,CAAcjO,YAAa4B,KAAK7B,MAAMyK,KAC1D0C,oBAAqBtL,KAAK0L,wBAC1BH,sBAAuBvL,KAAK2L,0BAC5BtM,MAAOW,KAAK7B,MAAMkB,SAQtB,eAAC,EAAD,WACI,cAAC,EAAD,CAAOK,KAAMM,KAAKO,MAAM4K,WAAYlL,WAAYD,KAAK0L,wBAArD,SACCM,IAEAC,S,GA3GW7L,aAkIbqD,gBAjBQ,SAAAlD,GACnB,MAAO,CACHqI,KAAKrI,EAAMkJ,cAAcrL,YACzBiB,MAAMkB,EAAMkJ,cAAcC,WAC1BlJ,MAAMD,EAAMkJ,cAAcjJ,UAIP,SAAAwB,GACvB,MAAO,CACHmK,0BAA2B,SAACG,GAAD,OAAatK,EtB5IrC,CACHI,KAAKC,EACLkK,gBsB0IyFD,KACzFF,2BAA4B,SAACE,GAAD,OAAatK,EtBtItC,CACHI,KAAKC,EACLkK,gBsBoI6FD,KAC7FT,kBAAmB,kBAAM7J,EAASwK,MAClCZ,eAAiB,kBAAM5J,ErB5GpB,CACHI,KAAKC,QqB+GEoB,CAA2CpD,EAAmBmL,GAAczN,ICtH5E0O,G,4JAtBb,WACE,OAEI,aADF,CACE,OAAKvN,UAAU,MAAf,SAEE,cAAC,EAAD,UAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoL,KAAK,YAAYE,UAAWX,KACnC,cAAC,IAAD,CAAOS,KAAK,UAAUE,UAAWnH,IACjC,cAAC,IAAD,CAAOiH,KAAK,IAAIpG,OAAK,EAACsG,UAAWgB,gB,GAZ7BpL,aCGHsM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1K,MAAK,YAAkD,IAA/C2K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2BCPDO,GAAgB,SAACC,EAAUC,GACpC,OAAO,2BACAD,GACAC,ICCLC,GAAe,CACjBjP,YAAc,KACdoC,OAAM,EACNkJ,WAAY,GAGV4D,GAAsB,CACxBC,MAAQ,GACRC,MAAQ,GACRC,OAAS,GACTC,KAAO,KAGLC,GAAiB,SAACpN,EAAMmD,GAS1B,IAAMkK,EAAkB,gBAAKlK,EAAO6I,gBAAmBhM,EAAMnC,YAAYsF,EAAO6I,iBAAmB,GAK7FsB,EAAc,CAChBzP,YAFsB8O,GAAc3M,EAAMnC,YAAYwP,GAGtDlE,WAAWnJ,EAAMmJ,WAAa4D,GAAmB5J,EAAO6I,kBAE5D,OAAOW,GAAc3M,EAAMsN,IAGzBC,GAAoB,SAACvN,EAAMmD,GAC7B,IAAMqK,EAAY,gBAAKrK,EAAO6I,gBAAmBhM,EAAMnC,YAAYsF,EAAO6I,iBAAmB,GAEvFyB,EAAW,CACb5P,YAFgB8O,GAAc3M,EAAMnC,YAAY2P,GAGhDrE,WAAWnJ,EAAMmJ,WAAa4D,GAAmB5J,EAAO6I,kBAE5D,OAAOW,GAAc3M,EAAMyN,IAGzBC,GAAiB,SAAC1N,EAAMmD,GAI1B,OAAOwJ,GAAcgB,UAAS,CAC1B9P,YAAa,CACTmP,MAAM7J,EAAOtF,YAAYmP,MACzBC,MAAM9J,EAAOtF,YAAYoP,MACzBC,OAAO/J,EAAOtF,YAAYqP,OAC1BC,KAAKhK,EAAOtF,YAAYsP,MAE5BhE,WAAW,EACXlJ,OAAM,KAIR2N,GAAyB,SAAC5N,EAAMmD,GAClC,OAAOwJ,GAAcgB,UAAS,CAC1B9P,YAAa,CACTmP,MAAM7J,EAAOtF,YAAYmP,MACzBC,MAAM9J,EAAOtF,YAAYoP,MACzBC,OAAO/J,EAAOtF,YAAYqP,OAC1BC,KAAKhK,EAAOtF,YAAYsP,MAE5BhE,WAAW,EACXlJ,OAAM,KAkBC4N,GAdC,WAAmC,IAAlC7N,EAAiC,uDAAzB8M,GAAc3J,EAAW,uCAC9C,OAAOA,EAAOtB,MACV,KAAKC,EACD,OAAOsL,GAAepN,EAAMmD,GAChC,KAAKrB,EACD,OAAOyL,GAAkBvN,EAAMmD,GACnC,KAAKrB,EACD,OAAO4L,GAAe1N,EAAMmD,GAChC,KAAKrB,EACD,OAAO8L,GAAuB5N,EAAMmD,GAE5C,OAAOnD,G,SCpFL8M,GAAe,CACjBnK,OAAQ,GACRK,SAAQ,EACR8G,WAAU,GAgCC+D,GA7BC,WAAoC,IAAnC7N,EAAkC,uDAA1B8M,GAAe3J,EAAW,uCAC/C,OAAQA,EAAOtB,MACX,KAAKiM,EACD,OAAOnB,GAAc3M,EAAO,CAAC8J,WAAU,IAC3C,KAAKgE,EACD,OAAOnB,GAAc3M,EAAO,CAACgD,SAAQ,IACzC,KAAK8K,EACD,IAAMC,EAAWpB,GAAcxJ,EAAOlB,UAAU,CAACE,GAAGgB,EAAOf,UAC3D,OAAOuK,GAAc3M,EAAO,CACxBgD,SAAQ,EACR8G,WAAU,EACVnH,OAAO3C,EAAM2C,OAAO0C,OAAO0I,KAEnC,KAAKD,EACD,OAAOnB,GAAc3M,EAAO,CAACgD,SAAQ,IACzC,KAAK8K,EACD,OAAOnB,GAAc3M,EAAO,CAACgD,SAAQ,IACzC,KAAK8K,EACD,OAAOnB,GAAc3M,EAAO,CACxB2C,OAAOQ,EAAOR,OACdK,SAAQ,IAEhB,KAAK8K,EACD,OAAOnB,GAAc3M,EAAO,CAACgD,SAAQ,IACzC,QACI,OAAOhD,ICvBbgO,GAAmBC,OAAOC,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClCnF,cAAcoF,GACd3Q,MAAM4Q,KAGFC,GAAQC,aAAYL,GAAaJ,GACrCU,aAAgBC,QAGZC,GACJ,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACA,cAAC,IAAD,UACE,cAAC,GAAD,QAKJK,IAASC,OACPF,GACAG,SAASC,eAAe,SAM1B7C,M","file":"static/js/main.129680b4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-builder-react-app-48b8c-default-rtdb.europe-west1.firebasedatabase.app/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport './Order.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n    // console.log(\"Hello 1\");\r\n    // console.log(props.ingredients);\r\n    // console.log(\"Hello 1\");\r\n\r\n    for(let ingredientsname in props.ingredients) {\r\n        // console.log(ingredientsname[ingredientsname]);\r\n        // console.log(props.ingredients[ingredientsname]);\r\n        ingredients.push({ name: ingredientsname, amount:props.ingredients[ingredientsname]});\r\n        \r\n    }\r\n    \r\n    const ingredientOutput = ingredients.map(ig => {\r\n        // console.log(ig);\r\n        return <span \r\n                    key={ig.name}\r\n                    style={{\r\n                        textTransform:'capitalize',\r\n                        display:'inline-block',\r\n                        margin: '0 8px',\r\n                        border: '1px solid #ccc',\r\n                        padding: '5px'\r\n                    }}\r\n                    >{ig.name} {ig.amount}</span>\r\n    });\r\n\r\n    return (\r\n        <div className=\"Order\">\r\n            <p>Ingredients : {ingredientOutput}</p>      \r\n            <p>Price: <strong>$ {Number.parseFloat(props.price).toFixed(2)}</strong></p>      \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         ingredients:state.burgerBuilder.ingredients\r\n//         price:state.burgerBuilder.totalPrice\r\n//     }\r\n// }\r\n\r\nexport default order;","const Auxilary = (props) => props.children\r\n\r\nexport default Auxilary;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\r\n    );\r\n    \r\n    };\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport './Modal.css'\r\nimport Auxiiary from '../../../hoc/AUXiliary/Auxilary';\r\nimport Backdrop from './../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate( nextProps,nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Auxiiary>\r\n            <Backdrop show = {this.props.show} clicked={this.props.modalClose} />\r\n            <div className=\"Modal\"\r\n                style={{\r\n                    transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity : this.props.show ? '1' : '0'\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        </Auxiiary>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxiliary from '../AUXiliary/Auxilary';\r\n\r\nconst withErrorHandeller = (WrappedComponent,axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error:null\r\n        }\r\n\r\n        componentWillMount() {\r\n            // console.log(\"[withErrorHandeller] component \");\r\n            // console.log(axios);\r\n            this.reqInterceptors = axios.interceptors.response.use(req => {\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptors = axios.interceptors.response.use(response => response,error => {\r\n                this.setState({error:error});\r\n            });\r\n        }\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptors);\r\n            axios.interceptors.response.eject(this.resInterceptors);\r\n        }\r\n        \r\n        errorConfirmedHandeller = () => {\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Auxiliary>\r\n                <Modal show={this.state.error}\r\n                    modalClose = {this.errorConfirmedHandeller} >\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrappedComponent  {...this.props}/>\r\n            </Auxiliary>\r\n            )\r\n        }\r\n    } \r\n}\r\n    \r\nexport default withErrorHandeller;","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\r\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASED_BURGER_START = 'PURCHASED_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\r\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDER_FAAIL = 'FETCH_ORDER_FAAIL';\r\n","import * as actionTypes from './actionsTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredients = (name) => {\r\n    return {\r\n        type:actionTypes.ADD_INGREDIENTS,\r\n        ingredientsName:name\r\n    };\r\n};\r\n\r\nexport const removeIngredients = (name) => {\r\n    return {\r\n        type:actionTypes.REMOVE_INGREDIENTS,\r\n        ingredientsName:name\r\n    };\r\n};\r\n\r\nexport  const setIngredients = (ingredients) => {\r\n    return {\r\n        type:actionTypes.SET_INGREDIENTS,\r\n        ingredients:ingredients\r\n    };\r\n};\r\n\r\nexport  const fetchIngredientsFailed = (ingredients) => {\r\n    return {\r\n        type:actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n        .then(response => {\r\n            // alert(\"Wait\");\r\n            // console.log(\"Hello\");\r\n            // console.log(response);\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        });\r\n    };\r\n};","import * as actionTypes from './actionsTypes';\r\nimport axios from './../../axios-orders';\r\n\r\nexport const purchasedBurgerSuccess = (id,orderData) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFailed = (error)=> {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAILED,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type:actionTypes.PURCHASED_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json' , orderData)\r\n            .then(response => {\r\n                dispatch(purchasedBurgerSuccess(response.data, orderData))\r\n        } )\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFailed(error))\r\n        } );\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    // console.log(\" came to purchaseInit()) now it isin function \");\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOerderSuccess = (orders) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_SUCCESS,\r\n        orders:orders\r\n    }\r\n}\r\n\r\nexport const fetchOerderFail = (error) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_FAAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetchOerderStart = (error) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_START,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetchOrders =() => {\r\n    return dispatch => {\r\n        // dispatch(fetchOerderStart());\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchedOrderData = []; \r\n            for(let key in res.data) {\r\n                fetchedOrderData.push({...res.data[key],id: key});\r\n            }\r\n            // console.log(fetchedOrderData);\r\n            // console.log(\"Came out of detting order data.\");\r\n            dispatch(fetchOerderSuccess(fetchedOrderData));\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchOerderFail(err));\r\n        });   \r\n    }\r\n}","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className=\"Loader\">Loading...</div>\r\n    );\r\n};\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport './Orders.css';\r\nimport axios from '../../axios-orders'\r\nimport Order from './../../components/Order/Order';\r\nimport withErrorHandeller from '../../hoc/withErrorHandeller/withErrorHandelle';\r\nimport * as action from './../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from './../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner/>;\r\n        // console.log(\"cam before orders\");\r\n        // console.log(this.props.orders);\r\n        // console.log(this.props.loading);\r\n        // console.log(\"cam before orders\");\r\n        if(!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                    // console.log();\r\n                     <Order \r\n                        key = {order.id}\r\n                        ingredients={order.ingredienst}\r\n                        price={order.price}\r\n                    />\r\n                ))\r\n            }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProp = state => {\r\n    return {\r\n        orders:state.order.orders,\r\n        loading:state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(action.fetchOrders())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProp,mapDispatchToProps)(withErrorHandeller(Orders,axios));","export default __webpack_public_path__ + \"static/media/burgerLogo.ec69c7f6.png\";","import React from 'react';\r\nimport './Logo.css';\r\nimport burgerLogo from '../../assets/Images/burgerLogo.png'\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className=\"Logo\">\r\n            <img src = {burgerLogo} alt=\"My Burger Logo\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default logo;","import React from 'react';\r\nimport './NavigationItem.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink\r\n            to={props.links}\r\n            exact={props.exact}\r\n            activeClassName=\"active\" >{props.children}</NavLink></li>\r\n    );\r\n};\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => {\r\n    return (\r\n        <div>\r\n            <ul className=\"NavigationItems\">\r\n                <NavigationItem links=\"/\" exact>Burger Builder</NavigationItem>\r\n                <NavigationItem links=\"/orders\" >Orders</NavigationItem>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className=\"DrawerToggle\" onClick={props.open}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport Logo from './../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className=\"Toolbar\">\r\n            <DrawerToggle open={props.showSide}/>\r\n            <div className=\"Logo\">\r\n                <Logo/>\r\n            </div>\r\n            <nav  className=\"DesktopOnly\">\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n     );\r\n};\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport './SideDrawer.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport BackDrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxiliary from '../../../hoc/AUXiliary/Auxilary';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachClasses = [\"SideDrawer\",\"Close\"];\r\n    if(props.open) {\r\n        attachClasses = [\"SideDrawer\",\"Open\"];\r\n    }\r\n    return (\r\n        <Auxiliary>\r\n            <BackDrop show={props.open} clicked={props.close}/>\r\n            <div className={attachClasses.join(' ')}>\r\n                <div className=\"Logo\">\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Auxiliary>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Auxiliary from '../AUXiliary/Auxilary'; \r\nimport './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n\r\n    state = {\r\n        showSideDrawer : false\r\n    }\r\n\r\n    sideDrawerHandeller = () => {\r\n        this.setState({showSideDrawer : false});\r\n    }\r\n\r\n    showSideDrawerMenu = () => {\r\n        this.setState({showSideDrawer : true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Toolbar showSide = {this.showSideDrawerMenu}/>\r\n                <SideDrawer open={this.state.showSideDrawer} close={this.sideDrawerHandeller} />\r\n                <main className=\"content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport './BurgerIngredients.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredients extends Component {\r\n\r\n    render() {\r\n        // console.log(\"came to burgerIngredients\");\r\n        let ingredients = '';\r\n        switch(this.props.type) {\r\n            case ('bread-button') :\r\n                ingredients = <div className='BreadBottom'></div>;\r\n                break;\r\n            case ('bread-top') :\r\n                ingredients = (<div className='BreadTop'>\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                </div>);\r\n                break;\r\n            case ('meat') :\r\n                ingredients = <div className='Meat'></div>;\r\n                break;  \r\n            case ('cheese') :\r\n                ingredients = <div className='Cheese'></div>;\r\n                break;    \r\n            case ('salad') :\r\n                ingredients = <div className='Salad'></div>;\r\n                break;  \r\n            case ('bacon') :\r\n                ingredients = <div className='Bacon'></div>;\r\n                break;  \r\n            default :\r\n                ingredients = null; \r\n        }         \r\n        return ingredients;\r\n    }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n\r\n     type:PropTypes.string.isRequired   \r\n\r\n};\r\n\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Burger.css'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\nimport {connect} from 'react-redux';\r\n\r\nconst burger = (props) => {\r\n    console.log(\"1\");\r\n    console.log(props.ingredients);\r\n    console.log(\"1\");\r\n    \r\n    let transformedIngrediendts = Object.keys(props.ingredients).map(\r\n        (igKey) => {\r\n            // console.log(\"hello_below_lenth\");\r\n            // console.log(igKey);\r\n            // console.log(...Array(props.ingredients[igKey]));\r\n            // console.log(\"2\");\r\n            // return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n                return <BurgerIngredients key = {igKey} type={igKey}/>;\r\n            ;\r\n        }\r\n    ).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    if(transformedIngrediendts.length === 0) {\r\n        transformedIngrediendts = <p>Please start adding ingredients.</p>\r\n    }\r\n    console.log(transformedIngrediendts);\r\n    return (\r\n        <div className='Burger'>\r\n            <BurgerIngredients type =\"bread-top\"/>\r\n            {transformedIngrediendts}\r\n            <BurgerIngredients type =\"bread-button\"/>\r\n            {/* <BurgerIngredients type =\"salad\"/>\r\n            <BurgerIngredients type =\"bacon\"/> */}\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         ingredients:state.ingredients,\r\n        \r\n//     }\r\n// }\r\n\r\nexport default withRouter(burger);","// import React from 'react';\r\n// import './Button.css';\r\n\r\n// const button = (props) => {\r\n//     let color = 'Button';\r\n//     let btnType = props.btnType;\r\n//     color = color+' '+btnType;\r\n//        return (\r\n//              <button onClick={props.clicked} disabled={props.disabled}  className={color}> {props.children} </button>\r\n//        );\r\n// };\r\n\r\n// export default button;\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n      constructor(props) {\r\n            super(props);\r\n\r\n      }\r\n\r\n      componentWillMount() {\r\n\r\n      }\r\n\r\n      componentDidMount() {\r\n\r\n      }\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n\r\n      }\r\n\r\n      shouldComponentUpdate(nextProps, nextState) {\r\n\r\n      }\r\n\r\n      componentWillUpdate(nextProps, nextState) {\r\n\r\n      }\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n\r\n      }\r\n\r\n      componentWillUnmount() {\r\n\r\n      }\r\n\r\n      render() {\r\n            return (\r\n                  <div>\r\n\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nButton.propTypes = {\r\n\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    // console.log(\"[CheckoutSummary} props data\");\r\n    // console.log(props);\r\n    return (\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients = {props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutSummaryCancel}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutSummaryContinue}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClassesForm = [\"InputElement\"];\r\n\r\n    if(props.isValid && props.shouldValidate && props.touched) {\r\n        inputClassesForm.push('Invalid');\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case ('input') :\r\n            inputElement = <input className={inputClassesForm.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n            break;\r\n        case ('textarea') :\r\n            inputElement = <textarea className={inputClassesForm.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n            break;\r\n        case ('select') :\r\n                inputElement = (<select className={inputClassesForm.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}>\r\n                       {props.elementConfig.options.map(option => {\r\n                           return <option key ={option.value} value={option.value}>{option.displayValue}</option>\r\n                       })}\r\n                </select> ); \r\n                break;\r\n        default:\r\n            inputElement = <input className={inputClassesForm.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.labl}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport './ContactData.css';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from './../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { valid } from 'semver';\r\nimport { connect } from 'react-redux';\r\nimport withErrorHandelle from '../../../hoc/withErrorHandeller/withErrorHandelle';\r\nimport * as actions from './../../../store/actions/index'; \r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n                name: {\r\n                    elementType : 'input',\r\n                    elementConfig : {\r\n                        type : 'text',\r\n                        placeholder : \"Your Name\"\r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                street:{\r\n                    elementType : 'input',\r\n                    elementConfig : {\r\n                        type : 'text',\r\n                        placeholder : \"Your Street\"\r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                locality:{\r\n                    elementType : 'input',\r\n                    elementConfig : {\r\n                        type : 'text',\r\n                        placeholder : \"Your Locality\"\r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                State: {\r\n                    elementType : 'input',\r\n                    elementConfig : {\r\n                        type : 'text',\r\n                        placeholder : \"Your State\"\r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                zipCode: {\r\n                    elementType : 'input',\r\n                    elementConfig : {\r\n                        type : 'text',\r\n                        placeholder : \"Your Zip Code\"\r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true,\r\n                        minLength:5,\r\n                        maxLength:5,\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                country: {\r\n                    elementType : 'input',\r\n                    elementConfig : {\r\n                        type : 'text',\r\n                        placeholder : \"Your Country\"\r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                email:{\r\n                    elementType : 'input',\r\n                    elementConfig : {\r\n                        type : 'text',\r\n                        placeholder : \"Your E-Mail\"\r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false\r\n                },\r\n                deliveryMethod: {\r\n                    elementType : 'select',\r\n                    elementConfig : {\r\n                        options : [ \r\n                            {value:'swiggy' , displayValue:'Swiggy'},\r\n                            {value:'zomato' , displayValue:'Zomato'}\r\n                        ] \r\n                    },\r\n                    value:'',\r\n                    validation: {\r\n                        required:true\r\n                    },\r\n                    valid:true\r\n                },\r\n        },\r\n        formIsValid:false\r\n    }\r\n\r\n    checkValididity = (value,rules)  =>  {\r\n        \r\n        let isValid = false;\r\n        // console.log(\"[ContactData] checkvaliduity() function\");\r\n        // console.log(rules);\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    orderHandeller = (event) => {\r\n        this.setState({loading:true});\r\n        const formData = {};\r\n        for (let formKey in this.state.orderForm) {\r\n            formData[formKey] = this.state.orderForm[formKey].value;\r\n        }\r\n        const orders = {\r\n            ingredienst:this.props.ings,\r\n            price:this.props.price,\r\n            order:formData\r\n        }\r\n        this.props.onOrderBurger(orders);    \r\n    }\r\n\r\n    inputChangedHandeller = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm \r\n        }\r\n        const updatedFormOrderForm = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        } \r\n        updatedFormOrderForm.value = event.target.value;\r\n        updatedFormOrderForm.touched = true;\r\n        // console.log(\"[ContactData] inputChangedHandeller() function\");\r\n        // console.log(updatedFormOrderForm);\r\n        // console.log(updatedFormOrderForm);\r\n        updatedFormOrderForm.valid = this.checkValididity(updatedFormOrderForm.value,updatedFormOrderForm.validation);\r\n        updatedOrderForm[inputIdentifier] = updatedFormOrderForm;\r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid });\r\n\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"Came here in contact_data on clicked\");\r\n\r\n        const formElementsArrays = [];\r\n        for(let key in this.state.orderForm) {\r\n            formElementsArrays.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            });\r\n        }\r\n        // console.log(\"[ContactData] render() below is formElementdata\");\r\n        // console.log(formElementsArrays);\r\n\r\n\r\n\r\n        let form = (\r\n                <form onSubmit={this.orderHandeller}>\r\n\r\n                    {/* <Input elementType=\"...\" elementConfig=\"...\" value=\"...\" /> */}\r\n                    {formElementsArrays.map(element => (\r\n                        <Input \r\n                        key={element.id}\r\n                        elementType={element.config.elementType} \r\n                        elementConfig={element.config.elementConfig} \r\n                        value={element.config.value} \r\n                        isValid={!element.config.valid}\r\n                        touched={element.config.touched}\r\n                        shouldValidate = {element.config.validation}\r\n                        changed={(event) => this.inputChangedHandeller(event,element.id)}\r\n                        />\r\n                    ))}\r\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid} onClick={() => this.checkValididity()}>ORDER</Button>\r\n                </form>\r\n        );\r\n        if(this.props.loading) {\r\n            form = <Spinner />; \r\n        }\r\n        return (\r\n            <div className='ContactData'>\r\n                <h4>Enter your contact data:</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProp = state => {\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice,\r\n        loading:state.order.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProp = dispatch => {\r\n    return {\r\n        onOrderBurger:(orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProp,mapDispatchToProp)(withErrorHandelle(ContactData,axios));","import React, { Component } from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData'\r\nimport * as actions from './../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n        checkoutCancel = () => {\r\n            this.props.history.goBack();\r\n        }\r\n\r\n\r\n        checkoutContinue = () => {\r\n            // console.log(\"[Checkout] inside checkoutContinue() function\");\r\n            // console.log(this.props);\r\n            this.props.history.replace('/checkout/contact-data');\r\n        }\r\n\r\n    render() {\r\n        let summary = <Redirect to =\"/\" />;\r\n        // let summary = '';\r\n        // console.log(\"[Checkout] outside if condition \");\r\n        // console.log(this.props.purchase);\r\n        if ( this.props.purchase ) {\r\n            const purchasedRedirect =this.props.purchased ?<Redirect to=\"/\" /> :null;\r\n            // console.log(\"[Checkout] if condition \")\r\n            summary = (\r\n                <div>\r\n                <CheckoutSummary \r\n                ingredients={this.props.ings} \r\n                checkoutSummaryCancel ={this.checkoutCancel}\r\n                checkoutSummaryContinue={this.checkoutContinue}/>\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'}\r\n                    component={ContactData}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {summary}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateTpProps = state => {\r\n    // console.log(state.order);\r\n    return {    \r\n        ings:state.burgerBuilder.ingredients,\r\n        purchase:state.order.purchased\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateTpProps)(Checkout);","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n        <div className=\"BuildControl\">\r\n            <div className=\"Label\">{props.label}</div>\r\n            <button className=\"Less\" onClick = {props.removed} disabled={props.disabled}>Less</button> \r\n            <button className=\"More\" onClick = {props.added} >More</button> \r\n        </div>\r\n);\r\n\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuiltControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label : 'Salad', type : 'salad'},\r\n    {label : 'Bacon', type : 'bacon'},\r\n    {label : 'Cheese', type : 'cheese'},\r\n    {label : 'Meat', type : 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n        <div className = \"BuildControls\" >\r\n            <p>Current Price : <strong>$ {props.price.toFixed(2)} </strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuiltControl \r\n                    disabled={props.disabled[ctrl.type]}\r\n                    added = {() => props.ingredientAdded(ctrl.type)} \r\n                    removed = {() => props.ingredientsRemoved(ctrl.type)}\r\n                    key = {ctrl.label} \r\n                    label = {ctrl.label}  \r\n                />\r\n            ))}\r\n            <button className=\"OrderButton\" disabled={!props.purchasable} onClick={props.purchasing}>ORDER NOW</button>\r\n        </div>\r\n);\r\n\r\n\r\nexport default (buildControls);","import React from 'react';\r\nimport Auxilary from '../../../hoc/AUXiliary/Auxilary';\r\nimport Butron from './../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n        return (<li key={igKey}><span>{igKey}</span> : {props.ingredients[igKey]}</li>);\r\n    }); \r\n    return (\r\n        <Auxilary>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <h4>Total Price : <strong>$ {props.price.toFixed(2)}</strong></h4>\r\n            <p>Continue to checkout ?</p>\r\n            <Butron btnType=\"Danger\" clicked ={props.purchaseCancelEvent} >CANCEL</Butron>\r\n            <Butron btnType=\"Success\" clicked={props.purchaseContinueEvent} >CONTINUE</Butron>\r\n        </Auxilary>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Auxiliary from '../../hoc/AUXiliary/Auxilary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from './../../components/UI/Modal/Modal'\r\nimport OrderSummary from './../../components/Burger/OrderSummary//OrderSummary';\r\n// import axios from '../../axios-orders'\r\nimport Spinner from './../../components/UI/Spinner/Spinner';\r\nimport withErrorHandeller from '../../hoc/withErrorHandeller/withErrorHandelle'\r\nimport * as burgerBuilderActionTypes from './../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\nconst INGREDIENTS_PRICES =  {\r\n    salad : 0.5,\r\n    bacon : 0.4,\r\n    cheese : 0.6,\r\n    meat : 1.3\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n\r\n    //     } \r\n    // }\r\n\r\n    state = {\r\n        // ingredients : null,\r\n        totalPrice: 4,\r\n        purchasable : false,\r\n        purchasing:false,\r\n        // loading :false,\r\n        // error:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n        // axios.get('https://burger-builder-react-app-48b8c-default-rtdb.europe-west1.firebasedatabase.app/ingredients.json')\r\n        // .then(response => {\r\n        //     this.setState({ingredients:response.data});\r\n        // })\r\n        // .catch(error => {\r\n        //     this.setState({error:true});\r\n        // });\r\n    }\r\n\r\n    updatePurchasable(ingredients) {\r\n        // const ingredients = {\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients)\r\n        .map( igKey => {\r\n            return ingredients[igKey]\r\n        })\r\n        .reduce((sum ,el)=> {\r\n            return sum + el;\r\n        }, 0);\r\n        return  sum > 0;\r\n        // this.setState({purchasable: sum > 0})\r\n    }\r\n\r\n    purchaseHandeller = () => {\r\n        this.setState({purchasing:true});\r\n    }\r\n\r\n    purchaseCancelHandeller = () => {\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    purchaseContinueHandeller = () => {\r\n        // console.log(\"[purchaseContiueHandeller consoli log\");\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for(let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummaryData =null;\r\n     \r\n        if(this.state.loading) {\r\n            orderSummaryData = <Spinner />;\r\n        }\r\n        // console.log(\"Price is not deinedd\");\r\n\r\n        // console.log(this.props.price);\r\n        // console.log(\"Price is not deinedd\");\r\n\r\n\r\n        let burger = this.props.error ? <p>Ingredient's can't be loaded</p> : <Spinner />\r\n        if(this.props.ings) {\r\n        burger =  (\r\n                <Auxiliary>\r\n                    <Burger ingredients = {this.props.ings}/>\r\n                    <BuildControls \r\n                        purchasable = {this.updatePurchasable(this.props.ings)}\r\n                        ingredientAdded = {this.props.onIngredientAddedProperty}\r\n                        ingredientsRemoved = {this.props.onIngredientRemoveProperty}\r\n                        disabled = {disabledInfo}\r\n                        price = {this.props.price}\r\n                        purchasing={this.purchaseHandeller}\r\n                    />\r\n                </Auxiliary>\r\n                );\r\n                // console.log(this.props.ings);\r\n                orderSummaryData =  <OrderSummary ingredients={this.props.ings} \r\n                purchaseCancelEvent={this.purchaseCancelHandeller}\r\n                purchaseContinueEvent={this.purchaseContinueHandeller}\r\n                price={this.props.price}\r\n            />\r\n        }\r\n        // if(this.state.loading) {\r\n        //     orderSummaryData = <Spinner />;\r\n        // }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show={this.state.purchasing} modalClose={this.purchaseCancelHandeller}>\r\n                {orderSummaryData}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProp = state => {\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice,\r\n        error:state.burgerBuilder.error\r\n    };\r\n}\r\n\r\nconst mapDispatchTotProp = dispatch =>  {\r\n    return {\r\n        onIngredientAddedProperty: (ingname) => dispatch(burgerBuilderActionTypes.addIngredients(ingname)),\r\n        onIngredientRemoveProperty: (ingname) => dispatch(burgerBuilderActionTypes.removeIngredients(ingname)),\r\n        onInitIngredients: () => dispatch(burgerBuilderActionTypes.initIngredients( )),\r\n        onInitPurchase : () => dispatch(burgerBuilderActionTypes.purchaseInit()) \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProp,mapDispatchTotProp)(withErrorHandeller(BurgerBuilder,axios));","import React, { Component } from 'react'\n\n\nimport {Route , Switch} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Layout from './hoc/Layout/Layout';\nimport Checkout from './containers/Checkout/Checkout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nclass App extends Component {\n\n  render() {\n    return (\n      // <BrowserRouter>\n        <div className=\"App\">\n          \n          <Layout>\n            \n            <Switch>\n              <Route path=\"/checkout\" component={Checkout} /> \n              <Route path=\"/orders\" component={Orders} /> \n              <Route path=\"/\" exact component={BurgerBuilder} /> \n              {/* <BurgerBuilder /> */}\n              {/* <Checkout /> */}\n            </Switch>\n            \n          </Layout>\n        </div>\n        // </BrowserRouter>\n      );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updatedObject = (oldObject,updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import { object } from 'prop-types';\r\nimport * as actionTypes from '../actions/actionsTypes';\r\nimport {updatedObject} from './../utility';\r\n\r\nconst initialState = {\r\n    ingredients : null,\r\n    error:false,\r\n    totalPrice: 4,\r\n};\r\n\r\nconst INGREDIENTS_PRICES =  {\r\n    salad : 0.5,\r\n    bacon : 0.4,\r\n    cheese : 0.6,\r\n    meat : 1.3\r\n};\r\n\r\nconst addIngredients = (state,action) => {\r\n    // console.log(\"Clicked on add 1\");\r\n    // console.log([action.ingredientName]);\r\n    // console.log(action.ingredientsName);\r\n    // console.log(state.ingredients);\r\n\r\n    // console.log(state.ingredients[action.ingredientsName]);\r\n    // console.log(\"Clicked on add 2 \");\r\n   \r\n    const updatedIngredients = {[action.ingredientsName] : state.ingredients[action.ingredientsName] + 1};\r\n    // console.log(\"Clicked on add 3 \");\r\n    // console.log(updatedIngredients);\r\n    // console.log(\"Clicked on add 4\");\r\n    const updateIngredients = updatedObject(state.ingredients,updatedIngredients);\r\n    const updatdState = {\r\n        ingredients:updateIngredients,\r\n        totalPrice:state.totalPrice + INGREDIENTS_PRICES[action.ingredientsName]\r\n    }\r\n    return updatedObject(state,updatdState);\r\n};\r\n\r\nconst removeIngredients = (state,action) => {\r\n    const updatedIngre = {[action.ingredientsName] : state.ingredients[action.ingredientsName] - 1}\r\n    const updateIngre = updatedObject(state.ingredients,updatedIngre);\r\n    const updatdSt = {\r\n        ingredients:updateIngre,\r\n        totalPrice:state.totalPrice - INGREDIENTS_PRICES[action.ingredientsName]\r\n    }\r\n    return updatedObject(state,updatdSt);\r\n};\r\n\r\nconst setIngredients = (state,action) => {\r\n    // console.log(\"action\");\r\n    // console.log(action);\r\n    // console.log(\"action\");\r\n    return updatedObject(object , {\r\n        ingredients: {\r\n            salad:action.ingredients.salad,\r\n            bacon:action.ingredients.bacon,\r\n            cheese:action.ingredients.cheese,\r\n            meat:action.ingredients.meat,\r\n        },\r\n        totalPrice:4,\r\n        error:false\r\n    })\r\n};\r\n\r\nconst fetchIngredientsFailed = (state,action) => {\r\n    return updatedObject(object , {\r\n        ingredients: {\r\n            salad:action.ingredients.salad,\r\n            bacon:action.ingredients.bacon,\r\n            cheese:action.ingredients.cheese,\r\n            meat:action.ingredients.meat,\r\n        },\r\n        totalPrice:4,\r\n        error:false\r\n    })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENTS:\r\n            return addIngredients(state,action);\r\n        case actionTypes.REMOVE_INGREDIENTS:\r\n            return removeIngredients(state,action );\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state,action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state,action)\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;","import order from '../../components/Order/Order';\r\nimport * as actionsTypes from'../actions/actionsTypes';\r\nimport {updatedObject} from './../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading:false,\r\n    purchased:false\r\n};\r\n\r\nconst reducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case actionsTypes.PURCHASE_INIT:\r\n            return updatedObject(state, {purchased:true})\r\n        case actionsTypes.PURCHASED_BURGER_START:\r\n            return updatedObject(state, {loading:true})\r\n        case actionsTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updatedObject(action.orderData,{id:action.orderId});\r\n            return updatedObject(state, {\r\n                loading:false,\r\n                purchased:true,\r\n                orders:state.orders.concat(newOrder)\r\n            })\r\n        case actionsTypes.PURCHASE_BURGER_FAILED:\r\n            return updatedObject(state, {loading:false})\r\n        case actionsTypes.FETCH_ORDER_START:\r\n            return updatedObject(state, {loading:true})\r\n        case actionsTypes.FETCH_ORDER_SUCCESS:\r\n            return updatedObject(state, {\r\n                orders:action.orders,\r\n                loading:false\r\n            })\r\n        case actionsTypes.FETCH_ORDER_FAAIL:\r\n            return updatedObject(state, {loading:false})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore , applyMiddleware , compose, combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducer/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducer//order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder:burgerBuilderReducer,\n  order:orderReducer\n});\n\nconst store = createStore(rootReducer ,composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}